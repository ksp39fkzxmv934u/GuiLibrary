Library = {}
UserInputService = game:GetService("UserInputService")

InDragg = false
function SetDraggable(gui)
	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input)
		if InDragg then return end
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			InDragg = true
			dragStart = input.Position
			startPos = gui.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
					InDragg = false
				end
			end)
		end
	end)

	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

function Library.RandomName()
	local cs1 = math.random(12,24)
	local cs2 = {}
	for a = 1, cs1 do
		cs2[a] = string.char(math.random(32, 126))
	end
	return table.concat(cs2)
end

protectionindexes = {"Draggable_", "indexhide", "propertieshide", "getchildrenhide", "attach"}
function Library.ScreenGUI(...)
	local obj = Instance.new("ScreenGui")
	local args = {...}
	for i,v in pairs(args[1]) do
		if not table.find(protectionindexes, i) then
			obj[i] = v
		end
	end
	return obj
end

function Library.Frame(...)
	local obj = Instance.new("Frame")
	local args = {...}
	for i,v in pairs(args[1]) do
		if not table.find(protectionindexes, i) then
			obj[i] = v
		end
	end
	if args[1]["Draggable_"] ~= nil then
		SetDraggable(obj)
	end
	if args[1]["attach"] ~= nil then
		args[1]["attach"].Changed:Connect(function()
			obj.AnchorPoint = args[1]["attach"].AnchorPoint
			obj.Position = args[1]["attach"].Position
		end)
	end
	return obj
end

function Library.TextButton(...)
	local obj = Instance.new("TextButton")
	local args = {...}
	for i,v in pairs(args[1]) do
		if not table.find(protectionindexes, i) then
			obj[i] = v
		end
	end
	if args[1]["Draggable_"] ~= nil then
		SetDraggable(obj)
	end
	if args[1]["attach"] ~= nil then
		args[1]["attach"].Changed:Connect(function()
			obj.AnchorPoint = args[1]["attach"].AnchorPoint
			obj.Position = args[1]["attach"].Position
		end)
	end
	return obj
end

function Library.TextLabel(...)
	local obj = Instance.new("TextLabel")
	local args = {...}
	for i,v in pairs(args[1]) do
		if not table.find(protectionindexes, i) then
			obj[i] = v
		end
	end
	if args[1]["Draggable_"] ~= nil then
		SetDraggable(obj)
	end
	if args[1]["attach"] ~= nil then
		args[1]["attach"].Changed:Connect(function()
			obj.AnchorPoint = args[1]["attach"].AnchorPoint
			obj.Position = args[1]["attach"].Position
		end)
	end
	return obj
end

function Library.ViewportFrame(...)
	local obj = Instance.new("ViewportFrame")
	local args = {...}
	for i,v in pairs(args[1]) do
		if not table.find(protectionindexes, i) then
			obj[i] = v
		end
	end
	if args[1]["Draggable_"] ~= nil then
		SetDraggable(obj)
	end
	if args[1]["attach"] ~= nil then
		args[1]["attach"].Changed:Connect(function()
			obj.AnchorPoint = args[1]["attach"].AnchorPoint
			obj.Position = args[1]["attach"].Position
		end)
	end
	return obj
end

function Library.UICorner(...)
	local obj = Instance.new("UICorner")
	local args = {...}
	for i,v in pairs(args[1]) do
		if not table.find(protectionindexes, i) then
			obj[i] = v
		end
	end
	if args[1]["Draggable_"] ~= nil then
		SetDraggable(obj)
	end
	if args[1]["attach"] ~= nil then
		args[1]["attach"].Changed:Connect(function()
			obj.AnchorPoint = args[1]["attach"].AnchorPoint
			obj.Position = args[1]["attach"].Position
		end)
	end
	return obj
end

function Library.ImageLabel(...)
	local obj = Instance.new("ImageLabel")
	local args = {...}
	for i,v in pairs(args[1]) do
		if not table.find(protectionindexes, i) then
			obj[i] = v
		end
	end
	if args[1]["Draggable_"] ~= nil then
		SetDraggable(obj)
	end
	if args[1]["attach"] ~= nil then
		args[1]["attach"].Changed:Connect(function()
			obj.AnchorPoint = args[1]["attach"].AnchorPoint
			obj.Position = args[1]["attach"].Position
		end)
	end
	return obj
end

function Library.ImageButton(...)
	local obj = Instance.new("ImageButton")
	local args = {...}
	for i,v in pairs(args[1]) do
		if not table.find(protectionindexes, i) then
			obj[i] = v
		end
	end
	if args[1]["Draggable_"] ~= nil then
		SetDraggable(obj)
	end
	if args[1]["attach"] ~= nil then
		args[1]["attach"].Changed:Connect(function()
			obj.AnchorPoint = args[1]["attach"].AnchorPoint
			obj.Position = args[1]["attach"].Position
		end)
	end
	return obj
end

return Library
